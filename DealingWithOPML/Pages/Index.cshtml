@page
@model DealingWithOPML.Pages.IndexModel

<!DOCTYPE html>
<html>
<head>
    <title>RSS Feed Reader</title>
</head>
<body>
    <h1>RSS Feed Reader</h1>

    <ul>
        @foreach (var item in Model.PaginatedRssItems)
        {
            <li>
                <h3>@item.Title</h3>
                <p>Description: @Html.Raw(item.Description)</p>
                <p>Publication Date: @item.PubDate</p>
                <p>Link: <a href="@item.Link">@item.Link</a></p>
            </li>
        }
    </ul>

    <div>
        @if (Model.TotalPages > 1)
        {
            <nav aria-label="Page navigation example">
                <ul class="pagination justify-content-center">
                    @if (Model.TotalPages > 1)
                    {
                        @if (Model.CurrentPage > 1)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@Url.Page("Index", new { CurrentPage = Model.CurrentPage - 1, pageSize = Model.PageSize })">Previous</a>
                            </li>
                        }

                        @if (Model.CurrentPage > 3)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@Url.Page("Index", new { CurrentPage = 1, pageSize = Model.PageSize })">1</a>
                            </li>
                            @if (Model.CurrentPage > 4)
                            {
                                <li class="page-item disabled">
                                    <span class="page-link">...</span>
                                </li>
                            }
                        }

                        @for (int i = Math.Max(1, Model.CurrentPage - 2); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 2); i++)
                        {
                            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                <a class="page-link" href="@Url.Page("Index", new { CurrentPage = i, pageSize = Model.PageSize })">@i</a>
                            </li>
                        }

                        @if (Model.CurrentPage < Model.TotalPages - 2)
                        {
                            @if (Model.CurrentPage < Model.TotalPages - 3)
                            {
                                <li class="page-item disabled">
                                    <span class="page-link">...</span>
                                </li>
                            }
                            <li class="page-item">
                                <a class="page-link" href="@Url.Page("Index", new { CurrentPage = Model.TotalPages, pageSize = Model.PageSize })">@Model.TotalPages</a>
                            </li>
                        }

                        @if (Model.CurrentPage < Model.TotalPages)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@Url.Page("Index", new { CurrentPage = Model.CurrentPage + 1, pageSize = Model.PageSize })">Next</a>
                            </li>
                        }
                    }
                </ul>
            </nav>
        }
    </div>
</body>
</html>
